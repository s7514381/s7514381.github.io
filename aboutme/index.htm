
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>自由發揮 園丁Tim</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="/css/site.css?v=MaXwaNs5RtHAZ4g3VkYB6nFJyTuhduUey4IXyQfiHcM" />
    <link rel="stylesheet" href="/css/image-cover-frame.css?v=LndOvmdvYvfNGZ_Xby9XErY0d5p_LhPwLQ90eOPSTYg" />
    <link rel="stylesheet" href="/css/dynamic-form.css?v=kHNWcsTiItzqiDc_ryxKuhJWXoUb9-TTxkcO2nCvOSU" />

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/vue@3.2.45/dist/vue.global.prod.js" type="text/javascript"></script>
    <script src="/lib/Sortable/Sortable.min.js"></script>
    <script src="/lib/vue/vuedraggable.umd.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script src="/js/site.js?v=7zy2lQfplQHWIvjyGwWHMPu7byB1vB5atFKLbvzX2Zs"></script>
    <script src="/js/vue-mixin.js?v=jM0vXQ3dCnngQh74DddhSH64p6pA3sLF9iCfz8UZ8Qo"></script>
</head>

<body id="app">
    <script>
        var thisApp;
        var component;

        const baseMixin = {
            mixins: [firestoreMixin, realtimeDbMixin],
            data() {
                return {
                    Layout: {
                        headTitle: document.getElementsByTagName("title")[0].innerHTML,
                    }, 
                    authInfo: {
                        ready: false,
                        user: null,
                    },
                    connectionName: 'connections',
                }
            },
            beforeCreate() {
                thisApp = this;
            },
            async created() {
                thisApp.setHeadTitle(thisApp.pageTitle)

                let { waitForAuthStateChange } = await thisApp.getDbAssembly();
                thisApp.authInfo.user = await waitForAuthStateChange();
                thisApp.authInfo.ready = true;

                thisApp.userConnection(thisApp.authInfo.user);
            },
            computed: {
                hasAuth() { return thisApp.authInfo.user != null; },
            },
            methods: {
                userConnection: async function (userInfo) {
                    let { addConnection, serverTimestamp } = await thisApp.getRealtimeDb();

                    let hasAuth = userInfo != null;
                    let uid = hasAuth ? userInfo.uid : thisApp.newGuid();
                    let displayName = hasAuth ? userInfo.displayName : "訪客";

                    addConnection(thisApp.connectionName, uid, {
                        key: uid,
                        isMember: hasAuth,
                        displayName: displayName,
                        timestamp: serverTimestamp(),
                        connections: true,
                    });
                },
                signIn: async function () {
                    let { googleSignIn, getAuth } = await thisApp.getDbAssembly();
                    result = await googleSignIn();
                    thisApp.authInfo.user = result.user;
                    thisApp.userConnection(thisApp.authInfo.user);

                    thisApp.dbInsert("LoginUser", {
                        email: result.user.email,
                        displayName: result.user.displayName,
                        createDate: new Date(),
                    })
                },
                signOut: async function () {
                    if (!confirm("是否要登出?")) { return false; }

                    let uid = thisApp.authInfo.user.uid;
 
                    let { getAuth, signOut } = await thisApp.getDbAssembly();
                    const auth = getAuth();

                    signOut(auth).then(() => {
                        thisApp.authInfo.user = null;
                    }).catch((error) => {
                        console.log(error)
                    });

                    let { removeConnection } = await thisApp.getRealtimeDb();
                    removeConnection(thisApp.connectionName, uid);
                },
                newGuid: function () {
                    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                    );
                },
                setHeadTitle(title) {
                    if (!title) { return; }
                    document.getElementsByTagName("title")[0].innerHTML = title + ' - ' + thisApp.Layout.headTitle;
                },
            },
            watch: {
            }
        }
    </script>

    <header>
        <div style="display:contents"></div>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 px-5 nav-shadow navbar-animation">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold fs-3 logo-text" href="/">Github重劃區</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/imagecoverframe">圖片框選器</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/dynamicform">動態表單v1.0</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/interest">利息計算機</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/unitywebgl">Unity遊戲</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/aboutme">關於我</a>
                        </li>
                    </ul>

                    <ul class="navbar-nav flex-grow-1" style="justify-content: flex-end">
                        <li class="nav-item me-3 px-2">
                            <div v-if="authInfo.ready">
                                <a v-if="hasAuth" class="nav-link text-dark" @click="signOut()" style="cursor:pointer">{{authInfo.user.displayName}}</a>
                                <a v-if="!hasAuth" class="nav-link text-dark" @click="signIn()" style="cursor:pointer">登入</a>
                            </div>

                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container header-margin">
        <main role="main" class="pb-3">
            
<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="row flex-center">
            <div class="col-auto d-flex flex-center">
                <div class=" d-flex flex-center headshot mx-5">
                    <img src="/image/1674710448408.jpg" style="max-width: 100%; height: auto;" />
                </div>

            </div>
            <div class="col-12 col-lg-9 ">
                <div class="row">
                    <p class="fw-bold fs-5 title-text">簡述</p>
                    <p>嚴格要求程式碼的品質與結構，儘可能不寫重複邏輯</p>
                    <p>擅長的能力是模組化功能，盡可能地重複利用function，保證維護的品質與速度，</p>
                    <p>大幅度的減少了開發的時間(基礎CRUD可在20分鐘內產出)</p>
                    <p>以及降低與同事接交程式碼的負擔。</p>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <p class="fw-bold fs-5 title-text">能力</p>
                    <div>
                        平時主要為後端C#開發，工作上會支援前端技術與CSS切版。
                        <br />
                        具以下技術處理經驗：
                        <br />
                        <ul>
                            <li>1.網頁無障礙</li>
                            <li>2.GoogleAnalysis API 串接</li>
                            <li>3.word、excel處理(openxml、NPOI)，匯入範本動態產生文件</li>
                            <li>4.自然人/工商憑證</li>
                            <li>5.弱點掃描</li>
                            <li>6.SignalR做即時通訊</li>
                            <li>7.自製前端元件(CSS+JS)，例：圖片編輯器(修改對比度、亮度，截圖)</li>
                            <li>8.程式高度模組化、結構化，方便重複使用</li>
                            <li>9.對新技術有熱忱，最近在研究unity寫小遊戲</li>
                            <li>10.若工作上有需要，可學習任何程式語言。</li>
                        </ul>
                        <span class="title-text">程式語言</span> ：C#、VB.net
                        <br />
                        <span class="title-text">程式設計類</span>：ASP.NET 6 MVC、Dapper、SignalR、C# Channel
                        <br />
                        <span class="title-text">資料庫設計類</span>：MS SQL
                        <br />
                        <span class="title-text">網頁技術類</span>：Vue3、JavaScript、jQuery、AJAX、razor
                        <br />
                        <span class="title-text">UI/UX</span>：Bootstrap5、SCSS
                        <br />
                        <span class="title-text">網路技術類</span>：IIS
                        <br />
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <p class="fw-bold fs-5 title-text">經歷</p>
                    <div>
                        <span class="title-text fw-bold">1.師資生運用數位教學檢測工具系統-千人同時考試：</span>
                        <br />
                        使用技術: .Net 6 MVC、Channel、SignalR、Dapper、Vue3、scss、MS Sql
                        <br />

                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">*Channel技術：</span>
                            <br />
                            實作 高流量-千人同時考試
                            <br />
                            考生登入時已C# Channel機制 限制同時只會有一個請求讀取同一場考試，並且在完成後將考試物件存放至MemoryCache。
                            <br />
                            其他考生則會等待考試讀取完成後，跳轉至MemoryCache取得考試物件，以降低多人同時向資料庫取資料的效能負載。
                            <br />
                        </div>

                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">*SignalR：</span>
                            <br />
                            考試過程中，以SignalR監聽線上考生狀態，紀錄連線與斷線的事件以實現如果有學生斷線後連回考場可以把斷線時間加回去的機制。
                            <br />
                        </div>
                        <br />
                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">專案簡述：</span>
                            以.Net 6製作 後台出題審核系統+前台考試系統
                            <br />
                            在後台製作題庫，題型包含單選題、多選題、實作題、題組題。
                            <br />
                            經過學術審核以及形式審核之後成為定稿題目。
                            <br />
                            建立考試資訊後，在前台考試系統進行Session登入後並且讀取考試資訊，才能夠開始考試。
                            <br />
                            前後端通訊使用"輕裝Vue3"、axios，安全性上，網站採取白名單的方式限制IP登入，並且在後端的Action以ValidateAntiForgeryToken來防止使用者直接對網站使用參數Post請求的方式進行攻擊
                            <br />
                        </div>

                        <hr />
                        <span class="title-text fw-bold">2.新北市政府都市更新申辦系統 <a href="https://www.uro.ntpc.gov.tw/" target="_blank">https://www.uro.ntpc.gov.tw/</a>：</span>
                        <br />

                        使用技術: .Net core 3.1 MVC、SignalR、Dapper、Vue.js、css、MS Sql
                        <br />

                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">* 線上申請節省了80%都更申辦的過程時間：</span>
                            <br />
                            以填寫線上表單後在後台審核的方式，取代原本須至現場申請紙本，<br />補正原本需電話通知後至現場補齊文件，優化為電子郵件直接點擊連結上傳文件即可
                        </div>
                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">* Arcgis圖資系統 <a href="https://www.uro.ntpc.gov.tw/UrbanRenewalExploration/Index" target="_blank">https://www.uro.ntpc.gov.tw/UrbanRenewalExploration/Index</a>：</span>
                            <br />
                            經由申請案件，並且於後台審核之後，藉由案件的地區來計算出經緯度座標儲存至資料庫<br>
                            ，可以在Arcgis圖資裡面利用"區域"來查詢該案件，並且顯示出包含區塊<br />

                        </div>
                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">* 節省上千元的紙張費用，目標為實現無紙化系統。</span>
                        </div>


                        <br />
                        <div style="margin-left:1em;text-indent: -1em;">
                            <span class="title-text">專案簡述：</span>
                            以.Net Core 3.1開發，
                            <br />
                            使用動態頁面的方式快速製作靜態頁面，例：介紹新北市都市更新處的歷史、業務職掌。
                            <br />
                            以少量的code達到快速開發的效果。
                            <br />
                            並且網站的核心是可以無紙化的申請都市更新，
                            <br />
                            包含"後台審核系統"、使用"OpenXml"製作文件或列印為PDF，
                            <br />
                            審核完成的案件可以在Arcgis圖資系統裡面查詢該案件的狀況。
                            <br />
                        </div>

                    </div>
                    </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-body">
        <p class="fw-bold fs-5 title-text">現居台北市大同區</p>
        <div class="row">
            <div class="col">
                <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.149170625159!2d121.51330480878798!3d25.062932728035157!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a93ee261540b%3A0xea34a16eef2e900c!2z5bu25LiJ5aSc5biC!5e0!3m2!1szh-TW!2stw!4v1674203071035!5m2!1szh-TW!2stw"
                        width="600" height="450" style="border:0;width:100%" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
            </div>

        </div>
    </div>
</div>


<script>
    component = {
        mixins: [baseMixin],
        data() {
            return {
                pageTitle: '關於我',

            }
        },
        created() {

        },
        methods: {

        },
    }
    var formComponent = Vue.createApp(component)
</script>

        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Github - <a style="color: #6c757d" href="/Home/UpdateRenderView">更新</a>
        </div>
    </footer>

    <script>
        var vApp = formComponent.mount('#app')
    </script>


</body>
</html>
