
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>自由發揮 園丁Tim</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="/css/image-cover-frame.css" />
    

    <script src="https://unpkg.com/vue@3.2.45/dist/vue.global.prod.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>

<body>
    <style>
        .flex-center {
            justify-content: center !important;
            align-self: center !important;
        }

        ::-webkit-scrollbar {
            width: 16px;
        }

        ::-webkit-scrollbar-thumb {
            height: 56px;
            border-radius: 8px;
            border: 4px solid transparent;
            background-clip: content-box;
            background-color: hsl(0,0%,67%);
        }

            ::-webkit-scrollbar-thumb:hover {
                height: 56px;
                border-radius: 8px;
                border: 4px solid transparent;
                background-clip: content-box;
                background-color: #999;
            }

        body {
            background-color: #eee;
        }

        header {
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1
        }

        .header-margin {
            margin-top: 5em;
        }

        .navbar-animation {
            background: linear-gradient(45deg, #feffb1, #ff7bca, #5fb5ff, #9aef69);
            background-size: 800% 400%;
            animation: gradient 20s ease infinite;
        }

        @keyframes gradient {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }


        .nav-shadow {
            box-shadow: 0px 1px 5px 0px #aaa;
        }

        .logo-text {
            text-shadow: 0em 0.1em 4px #888;
            color: #333;
        }

        @media (max-width: 576px) {
            .nav-item {
                margin-top: 0.5em;
            }
        }

        .nav-item {
            box-shadow: 0px 1px 3px 0px #ccc;
            border-radius: 3em;
            background: #eeeeee94;
            transition: 0.2s;
        }

            .nav-item a {
                text-shadow: 0em 0.1em 3px #888;
            }

            .nav-item:hover {
                box-shadow: 1px 2px 5px 0px #bbb;
            }

        .title-text {
            color: #555;
            text-shadow: 0em 0.1em 3px #999;
        }
    </style>

    <script>
        var thisApp;
        var component;
        const baseMixin = {
            data() {
                return {
                    Layout: {
                        headTitle: document.getElementsByTagName("title")[0].innerHTML,
                    },

                }
            },
            beforeCreate() {
                thisApp = this
            },
            created() {
                thisApp.setHeadTitle(thisApp.pageTitle)
            },
            computed: {
            },
            methods: {
                newGuid: function () {
                    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                    );
                }, 
                setHeadTitle(title) {
                    if (!title) { return; }
                    document.getElementsByTagName("title")[0].innerHTML = title + ' - ' + thisApp.Layout.headTitle;
                },
            },
        }
    </script>

    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 px-5 nav-shadow navbar-animation">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold fs-3 logo-text" href="/">Github重劃區</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/aboutme">關於我</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/imagecoverframe">圖片框選器</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/interest">利息計算機</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" href="/unitywebgl">Unity遊戲</a>
                        </li>


                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div id="app" class="container header-margin">
        <main role="main" class="pb-3">
            


<div class="form-group row">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            <div class="row">
                <div class="col-12">
                    <div class="row">
                        <p class="fw-bold fs-5 title-text">功能說明</p>
                        <div>
                            此功能為實作考試出題系統中，針對圖片類型"選出圖中正確選項"之需求而研發出該功能。<br />
                            上傳一張圖片後可以在圖片內的隨意區域以拖曳的方式產生一個紅色方框作為考題選項。
                        </div>
                        <div class="mt-2" style="font-size: 14px; color: #777;">
                            網頁內的功能皆為自製，並且使用之套件皆為開放套件，歡迎有學習之需求者使用(預計未來開放整頁下載)。
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <p class="fw-bold fs-5 title-text">請先上傳一張圖片</p>
    <div class="col-lg-12 mb-3">
        <input @change="setImage($event.target)" type="file" accept=".jpg, .png" class="form-control" />
    </div>

    <div v-if="PreviewSrc" class="col-lg-12">
        <label class="fs-5 text-danger m-0 fw-bold">*請在圖片上拖曳以產生選項方框</label>
        <br />
        <label class="fs-5 text-danger m-0 fw-bold">*正確答案請點選方框右上角按鈕</label>
    </div>
    <div class="col-lg-12">
        <div class="image-frame" style="overflow-x:auto"
             :class="{'rendering': currentImageCover}"
             @mousedown="createImageCover($event)"
             @mousemove="changeImageCover"
             @mouseup="endImageCover">

            <img :src="PreviewSrc" />

            <div v-for="(option, i2) in OptionList"
                 class="img-cover-option"
                 :key="option.id"
                 :id="option.id"
                 :style="{
                    left: option.AxisX + 'px',
                    top: option.AxisY + 'px',
                    width: option.Width + 'px',
                    height: option.Height + 'px',
                    transform: `translate(${option.IsReverseX ? '-100' : '0'}%, ${option.IsReverseY ? '-100' : '0'}%)`,
                    }">

                <div v-if="!currentImageCover" class="d-contents">
                    <div class="image-frame">
                        <div class="image-cover-function">
                            <div class="mb-1">
                                <input v-model="CorrectOptionId"
                                       :value="option.id"
                                       class="form-check-input fs-3 m-0 image-cover-selected" type="radio"
                                       title="選擇為正確答案" />
                            </div>
                            <div @click="deleteItem(OptionList, option)">
                                <span class="fas fa-times-circle fs-3 text-danger" title="刪除"></span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

<script>
    component = {
        mixins: [baseMixin],
        data() {
            return {
                pageTitle: '圖片框選',
                ImageUrl: null,
                PreviewSrc: '',
                OptionList: [],
                currentImageCover: null,
                CorrectOptionId: '',
            }
        },
        created() {
        },
        methods: {
            setImage: async function (inputDom) {
                let file;
                if (inputDom.files.length > 0) { file = inputDom.files[0]; }

                var reader = new FileReader();
                reader.onload = function (e) {
                    thisApp.ImageUrl = file;
                    thisApp.PreviewSrc = e.target.result;
                    thisApp.OptionList = []
                };
                reader.readAsDataURL(file);
            },
            createImageCover: function (e) {
                e.preventDefault();
                if (e.target.nodeName != "IMG") { return false }

                let item = {};
                item.id = thisApp.newGuid();
                item.AxisX = e.offsetX
                item.AxisY = e.offsetY

                thisApp.currentImageCover = item
                thisApp.OptionList.push(item)
            },
            changeImageCover: function (e) {
                if (e.target.nodeName != "IMG") { return false }
                let item = thisApp.currentImageCover

                if (item) {
                    if (e.offsetX >= item.AxisX) {
                        item.Width = e.offsetX - item.AxisX
                        if (item.IsReverseX) { item.IsReverseX = false; }
                    }
                    else {
                        item.Width = item.AxisX - e.offsetX
                        if (!item.IsReverseX) { item.IsReverseX = true; }
                    }

                    if (e.offsetY >= item.AxisY) {
                        item.Height = e.offsetY - item.AxisY
                        if (item.IsReverseY) { item.IsReverseY = false; }
                    }
                    else {
                        item.Height = item.AxisY - e.offsetY
                        if (!item.IsReverseY) { item.IsReverseY = true; }
                    }
                }
            },
            endImageCover: function (e) {
                if (e.target.nodeName != "IMG") { return false }

                thisApp.currentImageCover = null;
            },
            deleteItem: function (list, item) {
                list.splice(list.indexOf(item), 1);

                list.forEach(function (v, i) {
                    v.Sequence = i
                })
            },
        },
    }
</script>
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Github - <a style="color: #6c757d" href="/Home/UpdateRenderView">更新</a>
        </div>
    </footer>

    <script>
        var app = Vue.createApp(component).mount('#app')
    </script>

</body>
</html>
